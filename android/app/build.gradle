plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
apply plugin: 'com.google.gms.google-services'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// apply plugin: 'com.android.application'
// START: FlutterFire Configuration
// apply plugin: 'com.google.gms.google-services'
// apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
// apply plugin: 'kotlin-android'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"



def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions += "flavor-type"

    productFlavors {
        staging {
            dimension "flavor-type"
            applicationId "com.finniu.app.staging"
            resValue "string", "app_name", "Finniu Staging"
            buildConfigField "String", "DEEP_LINK_SCHEME", "\"finniuappstaging\""
            sourceSets{
                staging {
                    res.srcDirs = ['src/staging/res']
                }
            }
            manifestPlaceholders = [DEEP_LINK_SCHEME: "finniuappstaging"]

        }
        production {
            dimension "flavor-type"
            applicationId "com.finniu"
            resValue "string", "app_name", "Finniu"
            buildConfigField "String", "DEEP_LINK_SCHEME", "\"finniuapp\""
            sourceSets{
                production {
                    res.srcDirs = ['src/production/res']
                }
            }
            manifestPlaceholders = [DEEP_LINK_SCHEME: "finniuapp"]
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    // compileOptions {
    //     sourceCompatibility JavaVersion.VERSION_1_8
    //     targetCompatibility JavaVersion.VERSION_1_8
    // }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.finniu"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode 450004
        versionName "4.5.4"
        multiDexEnabled true
        manifestPlaceholders = [
            DEEP_LINK_SCHEME: "finniuapp",
            applicationName: "io.flutter.app.FlutterApplication"
        ]
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
       release {
           signingConfig signingConfigs.release
       }
   }
}

flutter {
    source '../..'
}

dependencies {
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
}

configurations.all {
    exclude group: 'com.google.android.gms', module : 'play-services-ads'
    exclude group: 'com.google.android.gms', module : 'play-services-ads-identifier'
    exclude group: 'com.google.android.gms', module : 'play-services-ads-lite'
}
